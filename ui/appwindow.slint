import { Button, VerticalBox, LineEdit, HorizontalBox, ListView } from "std-widgets.slint";

export struct DataItem  {
    platform: string,
    password: string,
}

export component AppWindow inherits Window {
    in property <[DataItem]> data_model: [];
    callback add-to-database(string, string);
    callback copy-password-to-clipboard(string);
    callback delete-from-database(string);
    title: "Passwort Manager";
    HorizontalBox {
        VerticalBox {
            width: 450px;
            height: 600px;
            alignment: center;
            padding-left: 50px;
            padding-right: 50px;
            spacing: 30px;
            Text {
                text: "Neuen Eintrag erstellen";
                font-size: 30px;
                horizontal-alignment: center;
            }

            platform_input := LineEdit {  
                font-size: 14px;
                height: 40px;
                placeholder-text: "Name der Platform";
            }

            password_input := LineEdit {       
                font-size: 14px;
                height: 40px;
                input-type: password;
                placeholder-text: "Passwort";
            }

            Button {
                primary: true;
                text: "Passwort speichern";
                height: 30px;
                clicked => {
                    root.add_to_database(platform-input.text, password-input.text);
                    platform-input.text = "";
                    password-input.text = "";
                }
            }
            
        }
        VerticalBox {
            width: 500px;
            spacing: 30px;
            Text {
                text: "Deine Passwörter";
                font-size: 30px;
                horizontal-alignment: center;
            }
            list-view := ListView {
                for item in root.data_model: HorizontalLayout {
                    spacing: 10px;
                    Text { 
                        text: item.platform;
                        font-size: 20px; 
                    }
                    Button {
                        text: "Passwort kopieren"; 
                        width: 150px;
                        primary: true;
                        clicked => {
                            root.copy-password-to-clipboard(item.password);
                        }
                    }
                    Button {
                        text: "Löschen"; 
                        width: 100px;
                        
                        clicked => {
                            if (self.text == "Löschen") {
                                self.text = "Bestätigen"
                            } else {
                                root.delete_from_database(item.platform);
                            }
                        }
                    }
                }
            }   
        }
    }
}